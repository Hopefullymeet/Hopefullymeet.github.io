{"posts":[{"title":"数据结构与算法（一）","text":"注：以下代码均基于C++ 1.快排算法思路: 取数组q[]的中间值为参考, 将数组的首尾两端与数组的中间值比较(首端比中间值小, 尾端比中间值大)直至首尾两端均不符合条件.此时再将不符合条件的两个值交换. 12345678910111213141516171819202122232425void quickSort(int q[], int l, int r){ if(l &gt;= r) return; //递归算法的终止条件 int x = q[l + r &gt;&gt; 1], i = l - 1, j = r + 1; //取x作为比较的中间值 while(i &lt; j) { do i++; while(q[i] &lt; x); do j--; while(q[j] &gt; x); // 如果还满足i &lt; j且q[i] &lt; q[j],交换q[i]与q[j] if(i &lt; j) { int t = q[i]; q[i] = q[j]; q[j] = t; } } quickSort(q, l, j), quickSort(q, j + 1, r); //递归算法} 2.归并排序算法思路: 将数组q[]从中间分成长度相等的两段, 设其长度中间值为mid. 依次比较q[1]与q[mid + 1]等的大小, 不断将两者其中更小者放入临时数组temp[]中, 直至两段中的一段全部被放入. 此时再将未放完的一段数组全部放入临时数组temp[]中. 12345678910111213141516171819void mergeSort(int q[], int l, int r){ if(l &gt;= r) return; //归并算法终止条件 int mid = l + r &gt;&gt; 1, i = l, j = mid + 1, t = 0; //定义数组中间位数等 int temp[100010]; //定义临时数组用来保存部分数据 mergeSort(q, l, mid), mergeSort(q, mid + 1, r); //归并算法 while(i &lt;= mid &amp;&amp; j &lt;= r) // { if(q[i] &lt;= q[j]) temp[t++] = q[i++]; else temp[t++] = q[j++]; } while(i &lt;= mid) temp[t++] = q[i++]; while(j &lt;= r) temp[t++] = q[j++]; for(i = l, t = 0;i &lt;= r;i++, t++) q[i] = temp[t]; //将临时数组中的元素放回到数组q[]中 } 更新中…","link":"/2023/07/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%EF%BC%88%E4%B8%80%EF%BC%89/"},{"title":"我是如何搭建自己的博客的？","text":"写下第一篇这篇正值暑假，作者在家闲来无事翻看手机时，想起前一段时间北邮所谓的喜茶姐事件。在看完男主的博客后，不禁感叹男主的口才伶俐，同时也懂得借助博客来扩大事件的关注度。 为了记录学习过程，同时以备不时之需作者决定借助hexo和GitHub搭建一个博客。 一、准备工作1.下载并安装Node.js 2.下载并安装Git 3.确保你拥有一个Github账号 二、安装hexo1.创建一个文件夹用来存放本地的博客内容 ​ 2.在创建好的文件夹目录下右键呼出Git bash控制台 更新中…","link":"/2023/07/22/%E6%88%91%E6%98%AF%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%9A%84%EF%BC%9F/"}],"tags":[{"name":"数据结构与算法","slug":"数据结构与算法","link":"/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"},{"name":"学习","slug":"学习","link":"/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"web","slug":"web","link":"/tags/web/"},{"name":"初学","slug":"初学","link":"/tags/%E5%88%9D%E5%AD%A6/"}],"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","link":"/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"},{"name":"hexo","slug":"hexo","link":"/categories/hexo/"}],"pages":[]}